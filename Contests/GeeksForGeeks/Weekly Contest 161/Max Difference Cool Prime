class Solution {
  vector<int> pairs[1001];

  public:
    int MaxDiff(vector<int> &A, int n) {
        
         for(int i = 1; i <= 1000; ++i) {
        for(int j = 1; j <= 1000; ++j) {
            if(__gcd(i, j) == 1) {
                pairs[i].push_back(j);
            }
        }
    }
    
    

    vector<int> id[1001];
    for(int i = 0; i < n; ++i) {
       int x=A[i];
        id[x].push_back(i);
    }
    int ans = INT_MIN;
    for(int i = 0; i <= 1000; ++i) {
        for(int j: pairs[i]) {
            if(!id[i].empty() && !id[j].empty()) {
                ans = max(ans, abs(id[i].back() - id[j].front()));
            }
        }
    }
    return ans==INT_MIN?-1:ans;
    
    
    }
};
