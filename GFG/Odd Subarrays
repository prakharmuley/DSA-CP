//{ Driver Code Starts
import java.io.*;
import java.util.*;

class IntArray {
    public static int[] input(BufferedReader br, int n) throws IOException {
        String[] s = br.readLine().trim().split(" ");
        int[] a = new int[n];
        for (int i = 0; i < n; i++) a[i] = Integer.parseInt(s[i]);

        return a;
    }

    public static void print(int[] a) {
        for (int e : a) System.out.print(e + " ");
        System.out.println();
    }

    public static void print(ArrayList<Integer> a) {
        for (int e : a) System.out.print(e + " ");
        System.out.println();
    }
}

class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t;
        t = Integer.parseInt(br.readLine());
        while (t-- > 0) {

            int n;
            n = Integer.parseInt(br.readLine());

            int[] arr = IntArray.input(br, n);

            Solution obj = new Solution();
            long res = obj.countoddSubarrays(n, arr);

            System.out.println(res);
        }
    }
}

// } Driver Code Ends



class Solution {
    public long countoddSubarrays(int n, int[] a) {
        long[][] c = new long[2][2];
        c[0][0] = 1;
        long pSum = 0;
        long ans = 0;

        int i = 0;
        do {
            if ((a[i] & 1) != 0) {
                pSum++;
            }

            int j = i + 1;
            int x = j & 1;
            int y = (int)(pSum & 1);
            
            ans += c[x][1 - y];

            switch (y) {
                case 0:
                    c[x][0]++;
                    break;
                case 1:
                    c[x][1]++;
                    break;
            }

            i++;
        } while (i < a.length);

        return ans;
    }
}

