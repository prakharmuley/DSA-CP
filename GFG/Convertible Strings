class Solution {
    public static int gcd_Arr(int[] arr)
    {
        int temp=arr[0];
        int n=arr.length;
        
        for(int i=1;i<n;i++)
        {
            temp=gcd(temp,arr[i]);
            if(arr[i]==0) continue;
            if(temp==1) return 1;
        }
        return temp;
    }
    public static int gcd(int a, int b)
    {
        if(b==0) return a;
        return gcd(b,a%b);
    }
    public static int fun(String p, String q, int n)
    {
        int[] h1=new int[26];
        int h2[]=new int[26];
        for(int i=0;i<n;i++)
        {
            h1[p.charAt(i)-'a']++;
            h2[q.charAt(i)-'a']++;
        }
        if(Arrays.equals(h1,h2)) return 1;
        
        List<Integer> l=new ArrayList<>();
        int s=0;
        for(int i=0;i<25;i++)
        {
            s+=h1[i];
            s-=h2[i];
            if(s<0) return 0;
            l.add(s);
        }
        int[] temp=new int[l.size()];
        for(int i=0;i<l.size();i++) temp[i]=l.get(i);
        int g=gcd_Arr(temp);
        return g==1?0:1;
        
    }
    public static ArrayList<Integer> CompatibleStrings(int n, String[] A1, String[] A2) {
       ArrayList<Integer> ans=new ArrayList<>();
       for(int i=0;i<n;i++)
       {
           ans.add(fun(A1[i],A2[i],A1[i].length()));
       }
       return ans;
       
       
    }
}
