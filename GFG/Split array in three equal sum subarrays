//{ Driver Code Starts
import java.io.*;
import java.util.*;

class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int testCases = Integer.parseInt(br.readLine().trim());

        while (testCases-- > 0) {
            String[] str = br.readLine().trim().split(" ");
            int[] arr = new int[str.length];
            for (int i = 0; i < str.length; i++) {
                arr[i] = Integer.parseInt(str[i]);
            }

            Solution ob = new Solution();
            List<Integer> result = ob.findSplit(arr);

            if (result.get(0) == -1 && result.get(1) == -1) {
                System.out.println("false");
            } else {
                System.out.println("true");
            }
            System.out.println("~");
        }
    }
}

// } Driver Code Ends


// User function Template for Java
class Solution {
    // Function to determine if array arr can be split into three equal sum sets.
    public List<Integer> findSplit(int[] arr) {
        // code here
        long sum=0L;
        for(int x: arr) sum+=(long)x;
       
        
        long cur=0L;
        List<Integer> l=new ArrayList<>();
         if(sum%3!=0) 
         {
              l.add(-1);
            l.add(-1);
            return l;
         }
         sum/=3L;
         int f1=-1;
         int f2=-1;
        for(int i=0;i<arr.length;i++)
        {
            cur+=(long)arr[i];
            if(cur==sum&&f1==-1)
            {
                f1=i;
            }
            else if(f1!=-1&&cur==2L*sum)
            {
                f2=i;
                l.add(f1);
                l.add(f2);
                return l;
            }
        }
        if(l.size()==0) 
        {
            l.add(-1);
            l.add(-1);
        }
        return l;
        
    }
}
