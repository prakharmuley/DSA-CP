//{ Driver Code Starts
// Initial Template for Java
import java.io.*;
import java.lang.*;
import java.util.*;


// } Driver Code Ends
// User function Template for Java

class Solution {
    int s;
    public int fun(int i, int[] a, int k, int[] dp, int[] s)
    {
        if(i>=a.length-1) return 0;
       
        if(dp[i]!=(int)1e9) return dp[i];
        int tk=Integer.MAX_VALUE;
        for(int j=i+1;j<=Math.min(a.length-1,i+k);j++)
        {
            tk=Math.min(Math.abs(a[i]-a[j])+fun(j,a,k,dp,s),tk);
    
           
        }
       dp[i]=tk;
       return dp[i];
        
    }
    public int minimizeCost(int k, int arr[]) {
        int n=arr.length;
        int[] dp=new int[n];
        int[] s=new int[1];
 
        Arrays.fill(dp,(int)1e9);
      
         return fun(0,arr,k,dp,s);
    }
}


//{ Driver Code Starts.

class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine());
        while (t-- > 0) {
            int k = Integer.parseInt(br.readLine());
            String line = br.readLine();
            String[] tokens = line.split(" ");

            // Create an ArrayList to store the integers
            ArrayList<Integer> array = new ArrayList<>();

            // Parse the tokens into integers and add to the array
            for (String token : tokens) {
                array.add(Integer.parseInt(token));
            }

            int[] arr = new int[array.size()];
            int idx = 0;
            for (int i : array) arr[idx++] = i;
            Solution obj = new Solution();
            int res = obj.minimizeCost(k, arr);

            System.out.println(res);
        }
    }
}
// } Driver Code Ends
