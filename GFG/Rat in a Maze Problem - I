//{ Driver Code Starts
// Initial Template for Java

import java.util.*;

class Rat {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        while (t-- > 0) {
            int n = sc.nextInt();
            int[][] a = new int[n][n];
            for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++) a[i][j] = sc.nextInt();

            Solution obj = new Solution();
            ArrayList<String> res = obj.findPath(a);
            Collections.sort(res);
            if (res.size() > 0) {
                for (int i = 0; i < res.size(); i++) System.out.print(res.get(i) + " ");
                System.out.println();
            } else {
                System.out.println(-1);
            }
        }
    }
}

// } Driver Code Ends


// User function Template for Java

// m is the given matrix and n is the order of matrix
class Solution {
    static void dfs(int i, int j, int n, int m, int[][] arr, ArrayList<String> l, StringBuilder sb)
    {
        if(i>=n||j>=m||i<0||j<0||arr[i][j]==0) return ;
       
        if(i==n-1&&j==m-1)
        {
            l.add(sb.toString());
            return;
        }
        arr[i][j]=0;
        if(i+1<n&&arr[i+1][j]==1)
        {
          sb.append("D");
          dfs(i+1,j,n,m,arr,l,sb);
          sb.setLength(sb.length()-1);
        
        }
         if(i-1>=0&&arr[i-1][j]==1)
        {
          sb.append("U");
          dfs(i-1,j,n,m,arr,l,sb);
          sb.setLength(sb.length()-1);
        
        }
         if(j-1>=0&&arr[i][j-1]==1)
        {
          sb.append("L");
          dfs(i,j-1,n,m,arr,l,sb);
          sb.setLength(sb.length()-1);
         
        }
         if(j+1<n&&arr[i][j+1]==1)
        {
          sb.append("R");
          dfs(i,j+1,n,m,arr,l,sb);
          sb.setLength(sb.length()-1);
         
        }
        arr[i][j]=1;
      
        
    }
    public ArrayList<String> findPath(int[][] arr) {
        // Your code here
        int n=arr.length;
        int m=arr[0].length;
        if(arr[0][0]==0||arr[n-1][m-1]==0) return new ArrayList<String>();
        ArrayList<String> l=new ArrayList<>();
        StringBuilder sb=new StringBuilder();
        dfs(0,0,n,m,arr,l,sb);
        
        return l;
    }
    
}
