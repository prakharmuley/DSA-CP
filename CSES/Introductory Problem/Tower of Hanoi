import java.util.*;



import java.io.*;
import java.text.DecimalFormat;

public class Solution {
	
	static class InputReader {
		public BufferedReader reader;
		public StringTokenizer tokenizer;

		public InputReader(InputStream stream) {
			reader = new BufferedReader(new InputStreamReader(stream), 32768);
			tokenizer = null;
		}

		public String nextLine() {
			return null;
		}

		public String next() {
			while (tokenizer == null || !tokenizer.hasMoreTokens()) {
				try {
					tokenizer = new StringTokenizer(reader.readLine());
				} catch (IOException e) {
					throw new RuntimeException(e);
				}
			}
			return tokenizer.nextToken();
		}

		public int nextInt() {
			return Integer.parseInt(next());
		}

		public long nextLong() {
			return Long.parseLong(next());
		}
	}
	static int _gcd(int a, int b) {
		if (b == 0)
			return a;
		return _gcd(b, a % b);
	}
	
	public static void toh(int n, int a, int b, int c, List<int[]> ans)
	{
		if(n==0) return;
		
		toh(n-1,a,c,b,ans);
		ans.add(new int[] {a,c});
		
		toh(n-1, b, a, c, ans);
	}
	public static void solve(InputReader scanner, PrintWriter pw) {
		
//		int t=scanner.nextInt();
//		while(t-->0)
//		{
//			
//			
//		}
		
		int n=scanner.nextInt();
		List<int[]> ans=new ArrayList<>();
		toh(n,1,2,3, ans);
    	pw.print(ans.size()+"\n");
    	for(int[] a: ans)
    	{
    		pw.print(a[0]+" "+a[1]+"\n");
    	}
       
        
            		
    	
	
	   }
	

	public static void main(String[] args) {

		InputStream inputStream = System.in;
		OutputStream outputStream = System.out;
		InputReader in = new InputReader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		solve(in, out);
		out.close();
	}
	
	
  
	
}
	
