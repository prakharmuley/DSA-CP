/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void dfs(TreeNode n1, TreeNode n2, int l)
    {
         if(n1==null&&n2==null) return;
         if(n1!=null&&n2!=null&&l%2==1)
         {
            int v=n1.val;
            n1.val=n2.val;
            n2.val=v;
            dfs(n1.left,n2.right,l+1);
            dfs(n1.right,n2.left,l+1);
         }
         else if(l%2==0){
           dfs(n1.left,n2.right,l+1);
            dfs(n1.right,n2.left,l+1);
         }
         
         


        
        

    }
    public TreeNode reverseOddLevels(TreeNode root) {
        dfs(root.left,root.right,1);
        return root;
        
    }
}
