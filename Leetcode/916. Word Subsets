class Solution {
    public List<String> wordSubsets(String[] words1, String[] words2) {
        Map<Character, Integer> maxFreq = new HashMap<>();
        for (String word : words2) {
            Map<Character, Integer> freq = new HashMap<>();
            for (char c : word.toCharArray()) {
                freq.put(c, freq.getOrDefault(c, 0) + 1);
            }
            for (char c : freq.keySet()) {
                maxFreq.put(c, Math.max(maxFreq.getOrDefault(c, 0), freq.get(c)));
            }
        }
        
        List<String> result = new ArrayList<>();
        for (String word : words1) {
            Map<Character, Integer> freq = new HashMap<>();
            for (char c : word.toCharArray()) {
                freq.put(c, freq.getOrDefault(c, 0) + 1);
            }
            boolean isUniversal = true;
            for (char c : maxFreq.keySet()) {
                if (freq.getOrDefault(c, 0) < maxFreq.get(c)) {
                    isUniversal = false;
                    break;
                }
            }
            if (isUniversal) {
                result.add(word);
            }
        }
        return result;
    }
}
