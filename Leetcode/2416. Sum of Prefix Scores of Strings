
  struct Node{
        char ch;
        Node* children[26] = {nullptr};
        int prefix_cnt;
    };
class Solution {
  
    Node* root = new Node();
     void insert(string word) {
            Node* ptr = root;
            for(char ch : word){
                if(ptr->children[ch-'a'] == nullptr)
                    ptr->children[ch-'a'] = new Node();
                ptr = ptr->children[ch-'a'];
                ptr->prefix_cnt++;
            }
        }
        int count(string prefix) {
            Node* tmp = root;
            int cnt = 0;
            for(char ch : prefix) {
                int index = ch - 'a';
                if(tmp->children[index] == nullptr) break;
                tmp = tmp->children[index];
                cnt += tmp->prefix_cnt;
            }
            return cnt;
        }
public:
    vector<int> sumPrefixScores(vector<string>& words) {

        for(string x: words)
            insert(x);
        vector<int> ans;
        for(string x:words){
            int r = count(x);
            ans.push_back(r);
        }
        return ans;
    }
};
