class Solution {
    private long check(int[] diff, int start, int low, int up) {
        long sum = start;
        for (int d : diff) {
            sum += d;
            if (sum < low || sum > up)
                return sum;
        }
        return sum;
    }

    public int numberOfArrays(int[] differences, int low, int up) {
        int l = low, r = up;
        int lowest = low - 1;

        while (l <= r) {
            int mid = l + (r - l) / 2;
            long res = check(differences, mid, low, up);

            if (res >= low && res <= up) {
                lowest = mid;
                r = mid - 1;
            } else if (res < low) {
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }

        l = low;
        r = up;
        int largest = up + 1;

        while (l <= r) {
            int mid = l + (r - l) / 2;
            long res = check(differences, mid, low, up);

            if (res >= low && res <= up) {
                largest = mid;
                l = mid + 1;
            } else if (res < low) {
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }

        if ((lowest == low - 1) || (largest == up + 1)) return 0;
        return largest - lowest + 1;
    }
}
