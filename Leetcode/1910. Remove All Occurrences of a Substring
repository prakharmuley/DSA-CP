class Solution {
    private Boolean isMatch(String part, Stack<Character> st) {
        Stack<Character> temp = new Stack<>();
        temp.addAll(st);

        for(int i=part.length()-1; i>=0; i--) {
            if(!temp.isEmpty() && part.charAt(i) != temp.peek())
                return false;
            temp.pop();
        } 
        return true;
    }
    public String removeOccurrences(String s, String part) {
        Stack<Character> st = new Stack<>();

        for(int i=0; i<s.length(); i++) {
            st.push(s.charAt(i));
         
            if(st.size() >= part.length() && isMatch(part, st)) {
                for(int j=0; j<part.length(); j++)
                    st.pop();
            }
        }

        StringBuilder sb = new StringBuilder();
        while(!st.isEmpty())
            sb.append(st.pop());
        sb.reverse();

        return sb.toString();
    }
}
