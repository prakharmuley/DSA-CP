class Solution {
    public int minGroups(int[][] arr) {
        int N=arr.length;
        if (N <= 0)
    {
        return 0;
    }

    ArrayList<Interval> p = new ArrayList<>();
    int ans=0;
    Arrays.sort(arr, (i1, i2) -> i1[0]-i2[0]);
    PriorityQueue<Integer> pq=new PriorityQueue<>();
  //  for(int i=0;i<N;i++) pq.offer(arr[i][1]);
    for(int i=0;i<N;i++)
    {
        if(pq.isEmpty()||pq.peek()>arr[i][0]) ans++;
        else pq.poll();
        
        
       pq.offer(arr[i][1]+1);
    }
  
        return ans;

    }
}
 class Interval
{
    int start, end;
 
    Interval(int start, int end)
    {
        this.start = start;
        this.end = end;
    }
}
