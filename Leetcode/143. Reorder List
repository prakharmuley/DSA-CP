/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverse(ListNode head)
    {
         if(head==null||head.next==null) return head;
        ListNode prev=null;
        ListNode temp=head;
        while(temp!=null)
        {
            ListNode next=temp.next;
            temp.next=prev;
            prev=temp;
            temp=next;
        }
        return prev;
    }
    public ListNode middle(ListNode head)
    {
        if(head==null||head.next==null) return head;
        ListNode slow=head;
        ListNode fast=head;
        while(fast.next!=null&&fast.next.next!=null)
        {
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
        
    }
    public void reorderList(ListNode head) {
    
        ListNode i=head;
        ListNode mid=middle(head);
        ListNode j=mid.next;
        mid.next=null;
        j=reverse(j);
        ListNode n1=null;
        ListNode n2=null;
        while(j!=null)
        {
            n1=i.next;
            n2=j.next;
            i.next=j;
            j.next=n1;
            i=n1;
            j=n2;
        }
        
    }
}
