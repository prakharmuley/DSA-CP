/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode replaceValueInTree(TreeNode root) {
        List<Integer> l=new ArrayList<>();
        Queue<TreeNode> q=new LinkedList<>();
        root.val=0;
        q.offer(root);
        while(!q.isEmpty())
        {
            int n=q.size();
            List<TreeNode> lvl=new ArrayList<>();
            int sum=0;
        
            for(int i=0;i<n;i++)
            {
                TreeNode p=q.poll();
                lvl.add(p);
                if(p.left!=null)
                {
                    q.offer(p.left);
                    sum+=p.left.val;
                }
                if(p.right!=null)
                {
                    q.offer(p.right);
                    sum+=p.right.val;
                }
           
            }
            for (TreeNode node : lvl) {
                int tempsum=sum;
                if (node.left != null) {
                    tempsum -= node.left.val;
                }
                if (node.right != null) {
                    tempsum -= node.right.val;
                }
                if (node.left != null) {
                    node.left.val = tempsum;
                }
                if (node.right != null) {
                    node.right.val = tempsum;
                }
            }
           
        }
        return root;
        


    }
}
