/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeNodes(ListNode head) {
        ListNode temp=head;
        ListNode h=head;
        int n=0;
        while(temp!=null)
        {
            n++;
            temp=temp.next;
        }
        int a[]=new int[n];
        int j=0;
        List<Integer> l=new ArrayList<>();
        while(h!=null) 
        {
            if(h.val==0) l.add(j);
            a[j++]=h.val;
            
            h=h.next;
        }
        List<Integer> ans=new ArrayList<>();
        int sum=0;
       
        for(int i=l.get(0);i<l.get(1);i++)
        {
            sum+=a[i];
        }
        ans.add(sum);
        for(int i=1;i<l.size()-1;i++)
        {
            sum=0;
            for(int k=l.get(i);k<l.get(i+1);k++) sum+=a[k];
            
            ans.add(sum);
        }
         ListNode res=new ListNode(ans.get(0));
        ListNode answer=res;
        for(int i=1;i<ans.size();i++)
        {
            res.next=new ListNode(ans.get(i));
            res=res.next;
        }
       
        
        // 
        return answer;
        
    }
}
