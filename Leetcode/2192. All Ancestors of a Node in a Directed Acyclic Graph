
class Solution {
 
    
    public long maximumImportance(int n, int[][] r) {
        ArrayList<Integer> adj[]=new ArrayList[n];
        for(int i=0;i<n;i++)
        {
            adj[i]=new ArrayList<>();
        }
        int a[]=new int[1];
         for(int i=0;i<r.length;i++)
        {
            adj[r[i][0]].add(r[i][1]);
             adj[r[i][1]].add(r[i][0]);
        }
        PriorityQueue<int[]> pq=new PriorityQueue<>((aa,bb)->aa[0]-bb[0]);
        for(int i=0;i<n;i++)
        {
            pq.offer(new int[]{adj[i].size(),i});
        }
        int w[]=new int[n+1];
        int i=1;
        while(!pq.isEmpty())
        {
            w[pq.poll()[1]]=i++;
        }
        
        
          boolean vis[] = new boolean[n];
     long ans=0;
      
        for(i = 0;i<r.length;i++) {
            ans+=w[r[i][0]]+w[r[i][1]]; 
          
        }
       
        
        return ans;
        
        
    }
}
