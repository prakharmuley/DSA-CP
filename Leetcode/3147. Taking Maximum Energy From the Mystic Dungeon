class Solution {
    int dfs(int i, int n, int k, int[] a, int[] dp) {
        if (i >= n) return 0;
        if (dp[i] != Integer.MIN_VALUE) return dp[i];
        return dp[i] = a[i] + dfs(i + k, n, k, a, dp);
    }

    public int maximumEnergy(int[] energy, int k) {
        int n = energy.length;
        int[] dp = new int[n];
        Arrays.fill(dp, Integer.MIN_VALUE);

        int ans = Integer.MIN_VALUE;
        for (int i = 0; i < n; i++) {
            ans = Math.max(ans, dfs(i, n, k, energy, dp));
        }

        return ans;
    }
}
