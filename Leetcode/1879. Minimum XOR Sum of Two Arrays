class Solution {
    public int fun(int[] a, int[] b, int i,int msk, int n, int[][] dp)
    {
        if(i>=n) return 0;
        if(dp[i][msk]!=-1) return dp[i][msk];
        int ans=Integer.MAX_VALUE;
        for(int j=0;j<n;j++)
        {
            if((msk&(1<<j))!=0)
            {
                ans=Math.min(ans,((a[i]^b[j])+fun(a,b,i+1,(msk^(1<<j)),n,dp)));
            }
        }
        return dp[i][msk]=ans;

        
    }
    public int minimumXORSum(int[] nums1, int[] nums2) {
        int n=nums1.length;
     int[][] dp=new int[n][1<<n];
     for(int i=0;i<n;i++) Arrays.fill(dp[i],-1);
     return fun(nums1,nums2,0,((1<<n)-1),n,dp);
       
    }
}
